<script>
  function setFilterLocation(input) {
    switch (input.value) {
      case "Interna":
        lib.display("internal-seamstress-select", "");
        lib.display("external-seamstress-select", "none");
        break;
      case "Externa":
        lib.display("external-seamstress-select", "");
        lib.display("internal-seamstress-select", "none");
        break;
    };
  };

  document.getElementById("receipt-filter-form").addEventListener("submit", async e => {
    e.preventDefault();

    let receipt = {
      location: e.target.location.value,
      production_id: e.target.production_id.value,
      seal: e.target.seal.value,
      periodStart: e.target.periodStart.value,
      periodEnd: e.target.periodEnd.value,
      status: e.target.status.value
    };

    if (receipt.location == "Interna") { receipt.seamstress_id = e.target.internal_seamstress_id.value; };
    if (receipt.location == "Externa") { receipt.seamstress_id = e.target.external_seamstress_id.value; };

    console.log(receipt);

    const receipts = await API.response(Production.receipt.filter, receipt);
    if (!receipts) { return lib.message("Nenhum recebimento foi encontrado"); }

    console.log(receipts);
  });
</script>