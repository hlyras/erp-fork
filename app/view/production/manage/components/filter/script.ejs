<script>
  const MONTHS = [
    { name: "Janeiro", days: 31 },
    { name: "Fevereiro", days: 28 },
    { name: "Março", days: 31 },
    { name: "Abril", days: 30 },
    { name: "Maio", days: 31 },
    { name: "Junho", days: 30 },
    { name: "Julho", days: 31 },
    { name: "Agosto", days: 31 },
    { name: "Setembro", days: 30 },
    { name: "Outubro", days: 31 },
    { name: "Novembro", days: 30 },
    { name: "Dezembro", days: 31 }
  ];

  const DAYS = ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado'];

  document.getElementById("production-filter-form").addEventListener("submit", async e => {
    e.preventDefault();

    const production = {
      location: e.target.location.value
    };

    if (production.location == "Interna") { production.seamstress_id = e.target.internal_seamstress_id.value; };
    if (production.location == "Externa") { production.seamstress_id = e.target.external_seamstress_id.value; };

    const productions = await API.response(Production.filter, production);
    if (!productions) { return false; }

    lib.display("production-detail-box", "none");
    lib.display("production-filter-box", "");

    // let date = new Date(lib.genTimestamp());
    // console.log(date);

    // console.log(MONTHS[date.getMonth()].name);
    // console.log(MONTHS[date.getMonth()].days);

    // alert(d.getDate() + '/' + (d.getMonth() + 1) + '/' + d.getFullYear());

    // console.log(lib.firstDayOfMonth(lib.genTimestamp()));

    // let date = new Date(lib.genTimestamp());
    // console.log(DAYS[date.getDay()]);
    // console.log(MONTHS[date.getMonth()]);

    // let filter_box = document.getElementById("production-filter-box");

    // let days_div = lib.element.create("div", { class: "box b1 container" });
    // filter_box.append(days_div);

    // for (let i = 0; i < MONTHS[date.getMonth()].days; i++) {
    //   console.log(i + 1);
    //   days_div.append(lib.element.create("div", { class: "box b1 border" }, `${i}/${MONTHS[date.getMonth()].name}`));
    //   // Agora basta desenhar na tela os dias do mês
    // };

    productionFilter(productions);
  });

  function setFilterLocation(input) {
    switch (input.value) {
      case "Interna":
        lib.display("internal-seamstress-select", "");
        lib.display("external-seamstress-select", "none");
        break;
      case "Externa":
        lib.display("external-seamstress-select", "");
        lib.display("internal-seamstress-select", "none");
        break;
    };
  };

  function productionFilter(productions) {
    let filter_div = document.getElementById("production-filter-box");
    filter_div.innerHTML = "";

    !productions.length && filter_div.append(lib.element.create("div", {
      class: "box b1 lucida-grande bold center"
    }, "Sem resultados."));

    let date = new Date(lib.genTimestamp());
    console.log(date);

    let month = [];
    console.log(MONTHS[date.getMonth()]);

    for (let i = 0; i < MONTHS[date.getMonth()].days; i++) {
      filter_div.append(lib.element.create("div", {
        id: `month-day-${i + 1}`,
        class: "box b1 container border"
      }, `${i + 1}/${date.getMonth() + 1}/${date.getFullYear()}`));

      // console.log(`${i + 1}/${MONTHS[date.getMonth()].name}/${date.getFullYear()}`);
      // console.log(`${i + 1}-${date.getMonth() + 1}-${date.getFullYear()}`);

      let day = lib.convertDate(`${i + 1}-${date.getMonth() + 1}-${date.getFullYear()}`);
      // console.log(lib.dateToTimestamp(day));

      productions.forEach(production => {
        if (production.datetime > lib.dateToTimestamp(day) && production.datetime < lib.dateToTimestamp(day) + lib.timestampDay() - 1) {
          let production_div = lib.element.create("div", { class: "box b1 container ground border radius-5 padding-5 margin-top-5" });
          production_div.append(lib.element.create("div", {
            class: "mobile-box b9 input-show border-st center pointer",
            onclick: `productionDetail(${production.id})`
          }, production.id));
          production_div.append(lib.element.create("div", { class: "mobile-box b4-9 em08 center" }, production.seamstress_name));
          production_div.append(lib.element.create("div", { class: "mobile-box b6 em08 center" }, lib.timestampToFulldate(production.datetime)));
          production_div.append(lib.element.create("div", { class: "mobile-box b4 em08 center" }, production.status));
          production_div.append(lib.element.icon('b12', 20, "/images/icon/edit.png", `productEdit(${production.id})`));
          production_div.append(lib.element.icon('b12', 20, "/images/icon/trash.png", `productDelete(${production.id})`));
          // filter_div.append(production_div);
          document.getElementById(`month-day-${i + 1}`).append(production_div);
        }
      });
    };

    console.log(productions);

    productions.forEach(production => {
      console.log(production);
    });



    // productions.forEach(production => {
    //   let production_div = lib.element.create("div", { class: "box b1 container ground border radius-5 padding-5 margin-top-5" });
    //   production_div.append(lib.element.create("div", {
    //     class: "mobile-box b9 input-show border-st center pointer",
    //     onclick: `productionDetail(${production.id})`
    //   }, production.id));
    //   production_div.append(lib.element.create("div", { class: "mobile-box b4-9 em08 center" }, production.seamstress_name));
    //   production_div.append(lib.element.create("div", { class: "mobile-box b6 em08 center" }, lib.timestampToFulldate(production.datetime)));
    //   production_div.append(lib.element.create("div", { class: "mobile-box b4 em08 center" }, production.status));
    //   production_div.append(lib.element.icon('b12', 20, "/images/icon/edit.png", `productEdit(${production.id})`));
    //   production_div.append(lib.element.icon('b12', 20, "/images/icon/trash.png", `productDelete(${production.id})`));
    //   filter_div.append(production_div);
    // });
  };
</script>