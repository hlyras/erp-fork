<script>
  const MONTHS = [
    { name: "Janeiro", days: 31 },
    { name: "Fevereiro", days: 28 },
    { name: "Março", days: 31 },
    { name: "Abril", days: 30 },
    { name: "Maio", days: 31 },
    { name: "Junho", days: 30 },
    { name: "Julho", days: 31 },
    { name: "Agosto", days: 31 },
    { name: "Setembro", days: 30 },
    { name: "Outubro", days: 31 },
    { name: "Novembro", days: 30 },
    { name: "Dezembro", days: 31 }
  ];

  const DAYS = ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado'];

  document.getElementById("production-filter-form").addEventListener("submit", async e => {
    e.preventDefault();

    const production = {
      location: e.target.location.value
    };

    if (production.location == "Interna") { production.seamstress_id = e.target.internal_seamstress_id.value; };
    if (production.location == "Externa") { production.seamstress_id = e.target.external_seamstress_id.value; };

    const productions = await API.response(Production.filter, production);
    if (!productions) { return false; }

    lib.display("production-detail-box", "none");
    lib.display("production-filter-box", "");

    productionFilter(productions);
  });

  function setFilterLocation(input) {
    switch (input.value) {
      case "Interna":
        lib.display("internal-seamstress-select", "");
        lib.display("external-seamstress-select", "none");
        break;
      case "Externa":
        lib.display("external-seamstress-select", "");
        lib.display("internal-seamstress-select", "none");
        break;
    };
  };

  function productionFilter(productions) {
    let filter_div = document.getElementById("production-filter-box");
    filter_div.innerHTML = "";

    !productions.length && filter_div.append(lib.element.create("div", {
      class: "box b1 lucida-grande bold center"
    }, "Sem resultados."));

    let date = new Date(lib.genTimestamp());
    // let date = new Date(1735268400000);

    let previousYear = date.getFullYear() - 1;
    let currentYear = date.getFullYear();
    let nextYear = date.getFullYear() + 1;

    let previousMonth = date.getMonth() - 1;
    if (previousMonth < 0) { previousMonth = 11; }
    let currentMonth = date.getMonth();
    let nextMonth = date.getMonth() + 1;
    if (nextMonth > 11) { nextMonth = 0 }

    let currentSunday = date.getDate() - date.getDay();
    if (currentSunday < 1 && currentMonth == 0) { currentSunday = MONTHS[previousMonth].days - (-currentSunday); }

    let previousSunday = currentSunday - 7;
    if (previousSunday < 1) { previousSunday = MONTHS[previousMonth].days - (-previousSunday); }

    let previous_week_div = lib.element.create("div", { class: "box b3 container border" });
    let current_week_div = lib.element.create("div", { class: "box b3 container border" });
    let next_week_div = lib.element.create("div", { class: "box b3 container border" });

    for (let i = 0; i < 7; i++) {
      if (date.getDate() - date.getDay() - 7 + i <= 0) {
        if (previousSunday + i <= MONTHS[previousMonth].days) {
          if (previousMonth == 11) {
            previous_week_div.append(lib.element.create("div", { class: "box b1 lucida-grande em08 bold border-st center" },
              `${previousSunday + i} / ${MONTHS[previousMonth].name} / ${previousYear}`));

            // render
            productionRender(productions, `${previousYear}-${previousMonth + 1}-${previousSunday + i}`, previous_week_div);
          } else {
            previous_week_div.append(lib.element.create("div", { class: "box b1 lucida-grande em08 bold border-st center" },
              `${previousSunday + i} / ${MONTHS[previousMonth].name} / ${currentYear}`));

            // render
            productionRender(productions, `${currentYear}-${previousMonth + 1}-${previousSunday + i}`, previous_week_div);
          }
        }
      } else {
        previous_week_div.append(lib.element.create("div", { class: "box b1 lucida-grande em08 bold border-st center" },
          `${currentSunday - 7 + i} / ${MONTHS[currentMonth].name} / ${currentYear}`));

        // render
        productionRender(productions, `${currentYear}-${currentMonth + 1}-${currentSunday - 7 + i}`, previous_week_div);
      }
    };

    for (let i = 0; i < 7; i++) {
      if (date.getDate() - date.getDay() + i <= 0) {
        if (currentSunday + i <= MONTHS[previousMonth].days) {
          if (previousMonth == 11) {
            current_week_div.append(lib.element.create("div", { class: "box b1 lucida-grande em08 bold border-st center" },
              `${currentSunday + i} / ${MONTHS[previousMonth].name} / ${previousYear}`));

            // render
            productionRender(productions, `${previousYear}-${previousMonth + 1}-${currentSunday + i}`, current_week_div);
          } else {
            current_week_div.append(lib.element.create("div", { class: "box b1 lucida-grande em08 bold border-st center" },
              `${currentSunday + i} / ${MONTHS[previousMonth].name} / ${currentYear}`));

            // render
            productionRender(productions, `${currentYear}-${previousMonth + 1}-${currentSunday + i}`, current_week_div);
          }
        }
      } else if (currentSunday + i > MONTHS[currentMonth].days) {
        current_week_div.append(lib.element.create("div", { class: "box b1 lucida-grande em08 bold border-st center" },
          `${currentSunday - MONTHS[currentMonth].days + i} / ${MONTHS[nextMonth].name} / ${nextYear}`));

        // render
        productionRender(productions, `${nextYear}-${nextMonth + 1}-${currentSunday - MONTHS[currentMonth].days + i}`, current_week_div);
      } else {
        current_week_div.append(lib.element.create("div", { class: "box b1 lucida-grande em08 bold border-st center" },
          `${date.getDate() - date.getDay() + i} / ${MONTHS[currentMonth].name} / ${currentYear}`));

        // render
        productionRender(productions, `${currentYear}-${currentMonth + 1}-${date.getDate() - date.getDay() + i}`, current_week_div);
      }
    };

    for (let i = 0; i < 7; i++) {
      if (date.getDate() - date.getDay() + 7 + i <= MONTHS[currentMonth].days) {
        next_week_div.append(lib.element.create("div", { class: "box b1 lucida-grande em08 bold border-st center" },
          `${date.getDate() - date.getDay() + 7 + i} / ${MONTHS[currentMonth].name} / ${currentYear}`));

        // render
        productionRender(productions, `${currentYear}-${currentMonth + 1}-${date.getDate() - date.getDay() + 7 + i}`, next_week_div);
      } else {
        if (nextMonth == 0) {
          next_week_div.append(lib.element.create("div", { class: "box b1 lucida-grande em08 bold border-st center" },
            `${date.getDate() - date.getDay() + 7 + i - MONTHS[currentMonth].days} / ${MONTHS[nextMonth].name} / ${nextYear}`));

          // render
          productionRender(productions, `${nextYear}-${nextMonth + 1}-${date.getDate() - date.getDay() + 7 + i - MONTHS[currentMonth].days}`, next_week_div);
        } else {
          next_week_div.append(lib.element.create("div", { class: "box b1 lucida-grande em08 bold border-st center" },
            `${date.getDate() - date.getDay() + 7 + i - MONTHS[currentMonth].days} / ${MONTHS[nextMonth].name} / ${currentYear}`));

          // render
          productionRender(productions, `${currentYear}-${nextMonth + 1}-${date.getDate() - date.getDay() + 7 + i - MONTHS[currentMonth].days}`, next_week_div);
        }
      }
    };

    filter_div.append(previous_week_div);
    filter_div.append(current_week_div);
    filter_div.append(next_week_div);
  };

  function productionRender(productions, day, div) {
    // console.log(productions);
    console.log(lib.timestampToDate(productions[4].date));
    console.log(day);
    productions.forEach(production => {
      if (production.preparation_deadline >= lib.dateToTimestamp(day) && production.preparation_deadline < lib.dateToTimestamp(day) + lib.timestampDay() - 1) {
        let production_div = lib.element.create("div", { class: "box b1 container ground border radius-5 padding-5 margin-top-5" });
        production_div.append(lib.element.create("div", {
          class: "mobile-box b9 input-show border-st center pointer",
          onclick: `productionDetail(${production.id})`
        }, production.id));
        production_div.append(lib.element.create("div", { class: "mobile-box b4-9 em08 center" }, production.seamstress_name));
        // production_div.append(lib.element.create("div", { class: "mobile-box b6 em08 center" }, lib.timestampToFulldate(production.datetime)));
        production_div.append(lib.element.create("div", { class: "mobile-box b4 em08 center" }, production.status));
        // production_div.append(lib.element.icon('b12', 20, "/images/icon/edit.png", `productEdit(${production.id})`));
        // production_div.append(lib.element.icon('b12', 20, "/images/icon/trash.png", `productDelete(${production.id})`));
        div.append(production_div);
      }
    });
  };
</script>