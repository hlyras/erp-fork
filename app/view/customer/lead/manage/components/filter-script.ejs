<!-- Script -->
<script>
  async function setStatus(lead, input) {
    let response = await API.response(Customer.lead.update, lead, input);
    if (!response) { return false; }
  };

  function renderLeads(leads, setup) {
    const filter_div = document.getElementById("leadlp-filter-div");
    filter_div.innerHTML = "";

    for (let i = setup.page * setup.pageSize; i < leads.length && i < (setup.page + 1) * setup.pageSize; i++) {
      let lead_div = lib.element.create("div", { class: "box b1 container border radius-5 padding-5 margin-top-5" });
      lead_div.append(lib.element.create("div", { class: "mobile-box b6 em09 border radius-5 padding-5 center" }, leads[i].id));
      lead_div.append(lib.element.create("div", { class: "mobile-box b2 em09 padding-5 center" }, leads[i].name));
      lead_div.append(lib.element.create("div", { class: "mobile-box b3 em09 padding-5 center" }, leads[i].phone));
      lead_div.append(lib.element.create("div", { class: "mobile-box b3 em09 padding-5 center" }, lib.convertDatetime(lib.timestampToDatetime(leads[i].datetime))));
      lead_div.append(lib.element.create("div", { class: "mobile-box b3 em09 padding-5 center" }, leads[i].email));

      let status_select = lib.element.create("select", { class: "mobile-box b3 09 padding-5 center" });
      status_select.append(lib.element.create("option", { value: "Ag. contato" }, "Ag. contato"));
      status_select.append(lib.element.create("option", { value: "Lista de transmissão" }, "Lista de transmissão"));
      status_select.append(lib.element.create("option", { value: "Convertido" }, "Convertido"));
      status_select.append(lib.element.create("option", { value: "Varejo" }, "Varejo"));
      status_select.append(lib.element.create("option", { value: "Sem contato" }, "Sem contato"));

      for (let j in status_select.options) {
        if (status_select.options[j].value == leads[i].status) { status_select.options[j].selected = true; }
      };

      status_select.addEventListener('change', async e => { setStatus({ id: leads[i].id, status: e.target.value }, e.target); });
      lead_div.append(status_select);

      lead_div.append(lib.element.create("div", { class: "mobile-box b3 em09 padding-5 center" }, leads[i].origin));

      filter_div.append(lead_div);
    }
  };

  document.getElementById("leadlp-filter-form").addEventListener("submit", async e => {
    e.preventDefault();

    let lead = {
      name: e.target.elements.namedItem("name").value,
      email: e.target.elements.namedItem("email").value,
      origin: e.target.elements.namedItem("origin").value,
      periodStart: lib.dateToTimestamp(event.target.elements.namedItem("periodStart").value),
      periodEnd: lib.dateToTimestamp(event.target.elements.namedItem("periodEnd").value),
      status: e.target.elements.namedItem("status").value
    };

    let leads = await API.response(Customer.lead.filter, lead);
    if (!leads) { return false; }

    const setup = { pageSize: 20, page: 0 };
    (function () { lib.carousel.execute("leadlp-filter-box", renderLeads, leads, setup); }());
  });
</script>