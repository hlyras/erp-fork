<script>
  document.getElementById("sale-filter-form").addEventListener("submit", async e => {
    e.preventDefault();

    let sale = {
      customer_id: e.target.customer_id.value
    };

    let sales = await API.response(Sale.filter, sale);
    let salesByCustomers = Object.groupBy(sales, ({ customer_id }) => customer_id);

    const period = {
      start: lib.dateToTimestamp(e.target.period_start.value),
      end: e.target.period_end.value ? lib.dateToTimestamp(e.target.period_end.value) + lib.timestampDay() - 1 : null
    };

    let customers = [];

    for (let i in salesByCustomers) {
      let customer = {
        id: salesByCustomers[i][0].customer_id,
        name: salesByCustomers[i][0].customer_name,
        phone: salesByCustomers[i][0].customer_phone,
        cellphone: salesByCustomers[i][0].customer_cellphone,
        last_sale: null,
        sales: salesByCustomers[i]
      };

      for (let y in salesByCustomers[i]) {
        if (salesByCustomers[i][y].status != "Em negociação") {
          customer.last_sale = salesByCustomers[i][y].sale_date > customer.last_sale ? salesByCustomers[i][y].sale_date : customer.last_sale;
        }
      };

      customers.push(customer);
    };

    if (period.start && period.end) {

      let sortedCustomers = [];
      for (let i in customers) {
        if (period.start <= customers[i].last_sale && period.end > customers[i].last_sale) {
          sortedCustomers.push(customers[i]);
        }
      };
      customers = sortedCustomers;
    }

    customers = lib.sort(customers, 'last_sale', 'desc');

    customerFilter(customers);
  });

  function customerFilter(customers) {
    let filter_div = document.getElementById("customer-filter-div");
    filter_div.innerHTML = "";

    filter_div.append(lib.element.create("div", { class: "box b1 em09 center padding-5 margin-top-5" }, `Total de clientes: ${customers.length}`));

    customers.forEach(async customer => {
      let customer_div = lib.element.create("div", { class: "box b1 container ground border-st radius-5 padding-5 margin-top-5" });
      filter_div.append(customer_div);

      customer_div.append(lib.element.createInfo("b10 em09", "ID", customer.id));
      customer_div.append(lib.element.createInfo("b3-10 em09", "Nome", customer.name));
      customer_div.append(lib.element.createInfo("b5 em09", "Telefone", customer.phone));
      customer_div.append(lib.element.createInfo("b5 em09", "WhatsApp", customer.cellphone));
      customer_div.append(lib.element.createInfo("b5 em09", "Última compra", lib.timestampToDate(customer.last_sale)));

      let sale_box = saleFilter(customer.sales);
      customer_div.append(sale_box);

      let timeline_box = timelineRender(customer.id)
      customer_div.append(timeline_box);

      let timeline_feed = lib.element.create("div", {
        id: `customer-${customer.id}-timeline`,
        class: "box b1 container min-height-50 margin-top-2"
      });

      timeline_box.append(timeline_feed);
      timelineFilter(customer.id);
    });
  };

  function saleFilter(sales) {
    let sale_container = lib.element.create("div", {
      class: "box b2 container h-center"
    });

    let sale_display = lib.element.create("div", {
      class: "box b1 lucida-grande em08 bold margin-top-10 center pointer",
    }, "Ver pedidos");
    sale_container.append(sale_display);

    let sale_box = lib.element.create("div", {
      class: "box b1 container min-height-100 max-height-300 padding-3 margin-top-5 scroll-y h-center",
      style: "display: none;"
    });

    sales.forEach(sale => {
      let sale_div = lib.element.create("div", { class: "box b1 container border-lg-st shadow radius-5 padding-5 margin-top-3 pointer" });
      sale_box.append(sale_div);
      sale_div.addEventListener("click", async e => { saleDetail(sale.id); });

      sale_div.append(lib.element.create("div", { class: "mobile-box b7 em09 bold center" }, `#${sale.id}`));
      sale_div.append(lib.element.create("div", { class: "mobile-box b2-7 em09 center" }, lib.timestampToDate(sale.sale_date)));
      sale_div.append(lib.element.create("div", { class: "mobile-box b2-7 em09" }, `R$${sale.value.toFixed(2)}`));
      sale_div.append(lib.element.create("div", { class: "mobile-box b2-7 em08 center" }, sale.user_name));
    });

    sale_display.addEventListener("click", async e => {
      console.log(sale_box);
      lib.displayDiv(sale_box, sale_display, "Ver pedidos", "Esconder pedidos");
    });

    sale_container.append(sale_box);

    return sale_container;
  };

  function timelineRender(customer_id) {
    let timeline_box = lib.element.create("div", {
      class: "box b2 container min-height-100 max-height-300 padding-3 margin-top-5 scroll-y h-center"
    });

    let timeline_form = timelineForm(customer_id);

    timeline_form.addEventListener("submit", async e => {
      e.preventDefault();

      let timeline = {
        customer_id: customer_id || null,
        content: e.target.content.value || null,
        meeting_datetime: lib.datetimeToTimestamp(e.target.meeting_datetime.value)
      };

      let response = await API.response(CustomerTimeline.create, timeline);
      if (!response) { return false; }

      e.target.content.value = null;
      e.target.meeting_datetime.value = "";

      timelineFilter(customer_id);
      taskRender();
    });

    timeline_box.append(timeline_form);

    return timeline_box;
  };

  async function timelineFilter(customer_id) {
    let timeline_feed = document.getElementById(`customer-${customer_id}-timeline`);
    timeline_feed.innerHTML = "";

    let timelines = await API.response(CustomerTimeline.filter, { customer_id }, timeline_feed);

    !timelines.length && timeline_feed.append(lib.element.create("div", { class: "box b1 lucida-grande em09 bold center" }, "Sem atividade"));

    timelines.forEach(timeline => {
      let timeline_div = lib.element.create("div", { class: "box b1 container padding-5 border-st radius-5 margin-top-5" });
      timeline_div.append(lib.element.create("div", { class: "mobile-box b6 em06 bold" }, timeline.category));
      timeline_div.append(lib.element.create("div", { class: "mobile-box b2 em06 right" }, timeline.user_name));
      timeline_div.append(lib.element.create("div", { class: "mobile-box b3 em06 bold center" }, lib.timestampToFulldate(timeline.datetime)));
      timeline_div.append(lib.element.create("div", { class: "mobile-box b1 pre-wrap em09 border radius-5 padding-5 margin-top-3" }, timeline.content))
      timeline_feed.append(timeline_div);
    });
  };

  function timelineForm(customer_id) {
    let timeline_form = lib.element.create("form", { class: "box b1 container border-st radius-5 padding-5 margin-top-5" });

    timeline_form.append(lib.element.create("div", { class: "box b1 em08" }, "Descrição"));
    timeline_form.append(lib.element.create("textArea", {
      id: `timeline-${customer_id}-form`,
      name: "content",
      class: "box b1 em09 border-st padding-5",
      placeholder: "Descrição do contato"
    }));

    timeline_form.append(lib.element.create("div", { class: "box b1 em08 margin-top-5" }, "Data de agendamento"));
    timeline_form.append(lib.element.create("input", {
      type: "datetime-local",
      name: "meeting_datetime",
      class: "box b1 em09 border-st padding-5 center"
    }));

    timeline_form.append(lib.element.create("button", {
      name: "submit",
      class: "box b1 btn-act noborder radius-5 em09 padding-10 margin-top-2 center pointer"
    }, `Registrar contato`));

    return timeline_form;
  }

  async function saleDetail(id) {
    let sale = await API.response(Sale.findById, id);
    if (!sale) { return false; }

    let sale_box = lib.element.create("div", { class: "box b1 container max-height-500 scroll-y" });

    let customer_div = lib.element.create("div", { class: "box b3 container padding-5 margin-top-5" });
    customer_div.append(lib.element.create("div", { class: "box b1 lucida-grande em09 bold underline center" }, "Dados do cliente"));
    customer_div.append(lib.element.createInfo("b1 lucida-grande em09 margin-top-5 padding-5", "Nome do cliente", `${sale.customer.name}`));
    sale.customer.cpf && customer_div.append(lib.element.createInfo("b1 lucida-grande em09 padding-5", "CPF", `${sale.customer.cpf}`));
    sale.customer.trademark && customer_div.append(lib.element.createInfo("b1 lucida-grande em09 padding-5", "Razão social", `${sale.customer.trademark}`));
    sale.customer.brand && customer_div.append(lib.element.createInfo("b1 lucida-grande em09 padding-5", "Marca", `${sale.customer.brand}`));
    sale.customer.cnpj && customer_div.append(lib.element.createInfo("b1 lucida-grande em09 padding-5", "CNPJ", `${sale.customer.cnpj}`));
    sale.customer.ie && customer_div.append(lib.element.createInfo("b1 lucida-grande em09 padding-5", "Inscrição Estadual", `${sale.customer.ie}`));
    sale.customer.email && customer_div.append(lib.element.createInfo("b1 lucida-grande em09 padding-5", "E-mail", `${sale.customer.email}`));
    sale.customer.cellphone && customer_div.append(lib.element.createInfo("b1 lucida-grande em09 padding-5", "Telefone", `${sale.customer.cellphone}`));

    sale.customer.address && customer_div.append(lib.element.create("div", { class: "box b1 lucida-grande em09 bold underline center" }, "Endereço de envio"));
    sale.customer.address && sale.customer.address.street && customer_div.append(lib.element.info("b4-5 lucida-grande em09 padding-5", "Logradouro", `${sale.customer.address.street}`));
    sale.customer.address && sale.customer.address.number && customer_div.append(lib.element.info("b5 lucida-grande em09 padding-5", "Nª", `${sale.customer.address.number}`));
    sale.customer.address && sale.customer.address.complement && customer_div.append(lib.element.info("b1 lucida-grande em09 padding-5", "Complemento", `${sale.customer.address.complement}`));
    sale.customer.address && sale.customer.address.neighborhood && customer_div.append(lib.element.info("b2 lucida-grande em09 padding-5", "Bairro", `${sale.customer.address.neighborhood}`));
    sale.customer.address && sale.customer.address.city && customer_div.append(lib.element.info("b2 lucida-grande em09 padding-5", "Cidade", `${sale.customer.address.city}`));
    sale.customer.address && sale.customer.address.state && customer_div.append(lib.element.info("b5 lucida-grande em09 padding-5", "Estado", `${sale.customer.address.state}`));
    sale.customer.address && sale.customer.address.postal_code && customer_div.append(lib.element.info("b4-5 lucida-grande em09 padding-5", "CEP", `${sale.customer.address.postal_code}`));
    sale_box.append(customer_div);

    let sale_info_div = lib.element.create("div", { class: "box b3 container padding-5 margin-top-5" });
    sale_info_div.append(lib.element.create("div", { class: "box b1 lucida-grande em09 bold underline center" }, "Informações da venda"));
    sale_info_div.append(lib.element.createInfo("box b2-7 em09 padding-10", "ID da venda", `${sale.id}`));
    sale_info_div.append(lib.element.createInfo("box b5-7 em09 padding-10", "Vendedor(a)", `${sale.user_name}`));
    sale_info_div.append(lib.element.createInfo("mobile-box b3-7 lucida-grande em09 padding-10", "Data da venda", `${lib.timestampToDate(sale.sale_date)}`));
    !sale.nf && sale_info_div.append(lib.element.createInfo("mobile-box b4-7 em09 padding-10", "Status", `${sale.status}`));
    sale.nf && sale.nf.length < 20 && sale_info_div.append(lib.element.createInfo("mobile-box b4-7 em09 padding-10", "Status", `${sale.status}`));
    sale.nf && sale.nf.length > 20 && sale_info_div.append(lib.element.createInfo("mobile-box b3-7 em09 padding-10", "Status", `${sale.status}`));
    sale.nf && sale.nf.length > 20 && sale_info_div.append(lib.element.icon('mobile-box b7', 30, "/images/icon/nf-e.png", "lib.openExternalLink('" + sale.nf + "')"));

    !sale.billet_url && sale_info_div.append(lib.element.createInfo("mobile-box b4-7 em09 padding-10", "Método de pagamento", `${sale.payment_method || ''}`));
    sale.billet_url && sale_info_div.append(lib.element.createInfo("mobile-box b3-7 em09 padding-10", "Método de pagamento", `${sale.payment_method || ''}`));
    sale_info_div.append(lib.element.createInfo("mobile-box b3-7 em09 padding-10", "Prazo de pagamento", `${sale.payment_period || ''}`));
    sale.billet_url && sale_info_div.append(lib.element.icon('mobile-box b7', 30, "/images/icon/billet.png", `lib.openExternalLink('${sale.billet_url}')`));

    sale_info_div.append(lib.element.create("div", { class: "box b1 lucida-grande em09 bold margin-top-10 underline center" }, "Logística de envio"));
    sale_info_div.append(lib.element.createInfo("mobile-box b2 em09 padding-10", "Método de envio", `${sale.shipment_method}`));
    sale.estimated_shipment_date && sale_info_div.append(lib.element.createInfo("mobile-box b2 em09 padding-10", "Prazo de embalo", `${lib.timestampToDate(sale.estimated_shipment_date)}`));
    sale.payment_confirmation_date && sale_info_div.append(lib.element.createInfo("mobile-box b2 em09 padding-10", "Confirmação do pagamento", `${lib.convertDatetime(lib.timestampToDatetime(sale.payment_confirmation_date)) || ''}`));
    sale.payment_user_name && sale_info_div.append(lib.element.createInfo("mobile-box b2 em09 padding-10", "Confirmação do pagamento", `${sale.payment_user_name || ''}`));
    sale.packment_confirmation_date && sale_info_div.append(lib.element.createInfo("mobile-box b3-7 em09 padding-10", "Data do embalo", `${lib.convertDatetime(lib.timestampToDatetime(sale.packment_confirmation_date)) || ''}`));
    sale.packment_user_name && sale_info_div.append(lib.element.createInfo("mobile-box b3-7 em09 padding-10", "Embalado por", `${sale.packment_user_name || ''}`));
    sale.box_amount && sale_info_div.append(lib.element.createInfo("mobile-box b7 em09 padding-10", "Volumes", `${sale.box_amount || ''}`));
    sale.shipment_confirmation_date && sale_info_div.append(lib.element.createInfo("mobile-box b2 em09 padding-10", "Data do envio", `${lib.convertDatetime(lib.timestampToDatetime(sale.shipment_confirmation_date)) || ''}`));
    sale.shipment_user_name && sale_info_div.append(lib.element.createInfo("mobile-box b2 em09 padding-10", "Enviado por", `${sale.shipment_user_name || ''}`));
    sale_box.append(sale_info_div);

    let financial_info_div = lib.element.create("div", { class: "box b3 container padding-5 margin-top-5" });
    financial_info_div.append(lib.element.create("div", { class: "box b1 lucida-grande em09 bold underline center" }, "Peso dos produtos"));
    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2 em09 margin-top-10" }, "Peso total:"))
    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2 em09 margin-top-10" }, `${(sale.weight / 1000).toFixed(1)}kg`))

    financial_info_div.append(lib.element.create("div", { class: "box b1 lucida-grande em09 bold margin-top-10 underline center" }, "Financeiro"));
    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2 em09 margin-top-10" }, "Produtos:"));
    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2 em09 margin-top-10" }, `R$${sale.product_value.toFixed(2)}`));
    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2 em09 margin-top-10" }, "Pacotes:"));
    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2 em09 margin-top-10" }, `R$${sale.package_value.toFixed(2)}`));
    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2 em09 margin-top-10" }, "Frete:"));
    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2 em09 margin-top-10" }, `R$${sale.shipment_value.toFixed(2)}`));
    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2 em09 margin-top-10" }, "Desconto:"));
    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2 em09 margin-top-10" }, `R$${sale.discount_value.toFixed(2)}`));

    financial_info_div.append(lib.element.create("div", { class: "mobile-box b3" }));
    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2-3 underline" }));

    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2 em09" }, "Total:"));
    financial_info_div.append(lib.element.create("div", { class: "mobile-box b2 em09 bold lucida-grande" }, `R$${sale.value.toFixed(2)}`));
    sale_box.append(financial_info_div);

    sale.obs && sale_box.append(lib.element.create("div", { class: "box b1 lucida-grande bold padding-10 border-st" }, sale.obs));

    let product_section = lib.element.create("div", { class: "box b1 container margin-top-5" });

    let product_box = lib.element.create("div", { class: "box b2 container ground border padding-5 margin-top-5" });
    product_box.append(lib.element.create("div", { class: "box b1 lucida-grande bold underline center" }, "Produtos"));
    for (let i in sale.products) {
      let product_div = lib.element.create("div", { class: "box b1 container ground box-hover border-explicit padding-10 margin-top-5" });
      product_div.append(lib.element.create("div", { class: "mobile-box b4-7 em09 v-center" }, sale.products[i].product_info));
      product_div.append(lib.element.create("div", { class: "mobile-box b7 lucida-grande center bold", style: "color:#060;" }, sale.products[i].amount + "un"));
      product_div.append(lib.element.create("div", { class: "mobile-box b7 em09 center" }, "R$" + sale.products[i].price));
      product_div.append(lib.element.create("div", { class: "mobile-box b7 em09 center" }, "R$" + (sale.products[i].amount * sale.products[i].price).toFixed(2)));
      product_box.append(product_div);
    };
    product_section.append(product_box);

    let package_box = lib.element.create("div", { class: "box b2 container ground border padding-5 margin-top-5" });
    package_box.append(lib.element.create("div", { class: "box b1 lucida-grande bold underline center" }, "Pacotes"));

    for (let i in sale.packages) {
      let package_div = lib.element.create("div", { class: "box b1 container ground border-explicit padding-10 margin-top-5" });
      let package_info = lib.element.create("div", { class: "box b1 container" });

      package_info.append(lib.element.create("div", {
        class: "mobile-box b8 center border-st box-hover pointer",
        onclick: "lib.displayDiv('package-" + sale.packages[i].package_id + "', this)"
      }, `P${sale.packages[i].package_id}`));

      package_info.append(lib.element.create("div", { class: "mobile-box b2 em09 center v-center" }, sale.packages[i].info));
      package_info.append(lib.element.create("div", { class: "mobile-box b3-8 center" }, sale.packages[i].setup));
      package_info.append(lib.element.create("div", { class: "mobile-box b3 lucida-grande center bold" }, sale.packages[i].amount + "un"));
      package_info.append(lib.element.create("div", { class: "mobile-box b3 em09 center" }, "R$" + sale.packages[i].price.toFixed(2)));
      package_info.append(lib.element.create("div", { class: "mobile-box b3 em09 center" }, "R$" + (sale.packages[i].amount * sale.packages[i].price).toFixed(2)));
      package_div.append(package_info);

      let package_product_box = lib.element.create("div", {
        id: "package-" + sale.packages[i].package_id,
        class: "box b1 container",
        style: "display:none;"
      });

      for (let j in sale.packages[i].products) {
        let package_product_div = lib.element.create("div", { class: "box b1 container border box-hover padding-5 margin-top-5 box-hover" });
        package_product_div.append(lib.element.create("div", { class: "mobile-box b5 lucida-grande center bold", style: "color:#060;" }, sale.packages[i].products[j].amount + "un"));
        package_product_div.append(lib.element.create("div", { class: "mobile-box b4-5 em09 v-center" }, sale.packages[i].products[j].product_info));
        package_product_box.append(package_product_div);
      };

      package_div.append(package_product_box);
      package_box.append(package_div);
    };

    product_section.append(package_box);
    sale_box.append(product_section);

    lib.popup(sale_box);
  };
</script>