<script>
  (async () => {
    let categories = await API.response(IncomeCategory.filter, {});
    let income_filter_form = incomeFilterForm("income-filter-form", categories);

    income_filter_form.addEventListener("submit", async e => {
      e.preventDefault();

      let income = {
        id: e.target.id.value,
        period_start: lib.dateToTimestamp(e.target.period_start.value),
        period_end: e.target.period_end.value ? lib.dateToTimestamp(e.target.period_end.value) + lib.timestampDay() - 1 : false,
        category_id: e.target.category_id.value,
        origin_id: e.target.origin_id.value
      };

      let incomes = await API.response(Income.filter, income, e.target.submit);
      if (!incomes) { return false; }

      incomeFilter(incomes);
    });

    document.getElementById("income-filter-component").append(income_filter_form);
    income_filter_form.submit.click();

    document.getElementById("income-filter-form").category_id.addEventListener("change", async e => {
      let origins = await API.response(IncomeOrigin.filter, { category_id: e.target.value }, e.target);
      if (!origins) { return false; }

      let origin_select = document.getElementById("income-filter-form").origin_id;
      origin_select.innerHTML = "";

      origin_select.append(lib.element.create("option", { value: "", selected: true, disabled: true }, "Origem"));

      origins.forEach(origin => {
        origin_select.append(lib.element.create("option", { value: origin.id }, origin.name));
      });

      e.target.focus();
    });
  })();

  function incomeFilter(incomes) {
    let filter_div = document.getElementById("income-filter-div");
    filter_div.innerHTML = "";

    lib.carousel.execute("income-filter-box", incomeFilterRender, incomes, { pageSize: 10, page: 0 });
  };

  function incomeFilterRender(incomes, pagination) {
    let filter_div = document.getElementById("income-filter-div");
    filter_div.innerHTML = "";

    let report_value = incomes.reduce((value, income) => { return value += income.value }, 0);
    filter_div.append(lib.element.create("div", { class: "box b1 lucida-grande em09 margin-top-5 margin-bottom-5 center" }, `Valor total: R$${report_value.toFixed(2)}`));

    for (let i = pagination.page * pagination.pageSize; i < incomes.length && i < (pagination.page + 1) * pagination.pageSize; i++) {
      let income_div = lib.element.create("div", { class: "box b1 container border-bottom-st box-hover padding-3 pointer" });
      income_div.addEventListener("click", e => { incomeDetail(incomes[i].id); });
      income_div.append(lib.element.create("div", { class: "mobile-box b6 lucida-grande em09 bold center" }, incomes[i].id));
      income_div.append(lib.element.create("div", { class: "mobile-box b6 lucida-grande em07 bold v-center" }, lib.timestampToDate(incomes[i].date)));
      income_div.append(lib.element.create("div", { class: "mobile-box b6 lucida-grande em08 v-center" }, incomes[i].category_name));
      income_div.append(lib.element.create("div", { class: "mobile-box b3 lucida-grande em08 v-center" }, incomes[i].origin_name));
      income_div.append(lib.element.create("div", { class: "mobile-box b6 lucida-grande em08 bold v-center" }, `R$${incomes[i].value.toFixed(2)}`));
      filter_div.append(income_div);
    };
  };
</script>